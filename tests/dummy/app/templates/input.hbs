{{#paper-toolbar}}
    <div class="md-toolbar-tools">
      {{#paper-sidenav-toggle as |toggle|}}
        {{#paper-button target=toggle action="toggleMenu" icon-button=true}}{{paper-icon "menu"}}{{/paper-button}}
      {{/paper-sidenav-toggle}}
        <span class="md-breadcrumb-page">Text Fields</span>
    </div>
{{/paper-toolbar}}
{{#paper-content class="md-padding"}}
<div class="doc-content">
  <div layout="" layout-sm="column">
      {{paper-input flex=30 label="Name" value=name}}
      {{paper-input flex=30 label="E-mail" type="email" value=email}}
      {{paper-input flex=40 label="Password" type="password"}}
  </div>
  <div layout="" layout-sm="column">
      {{paper-input flex=true label="Submission date" type="date" value=date}}
      {{paper-input flex=true label="Company (disabled)" type="text" value="Google" disabled=true}}
  </div>

  {{paper-input textarea=true label="Biography" value=biography}}
  <p>Name: {{name}}</p>
  <p>Email: {{email}}</p>

  <h3>Input Errors</h3>
  <p>
    {{paper-input label="Address" value=address required=true required-errortext="Address is required."}}
    {{paper-input type="number" label="Maximum Value" value=maxNumber max="5" max-errortext="Enter 5 or less."}}
    {{paper-input type="number" label="Minimum Value" value=minNumber min="1" min-errortext="Enter at least 1."}}
    {{paper-input label="Maximum Character Length" value=maxLength required=true maxlength="10" maxlength-errortext="Maximum length exceeded."}}
    {{paper-input label="All Constraints" value=allConstraints
        required=true
        min="2"
        max="10"
        maxlength="2"
        maxlength-errortext="Max length exceeded."
    }}
  </p>

  <h3>Icons</h3>
  <p>
      {{paper-input label="Name" value=name icon="person" icon-class="name"}}
      {{paper-input placeholder="Phone Number" type="text" value=user.phone icon="phone"}}
      {{paper-input label="Email (required)" type="email" value=user.email icon="email" icon-class="email" required=true hideAllMessages=true}}
      {{paper-input placeholder="Address" type="text" value=user.address icon="place"}}
  </p>

  <h3>Template</h3>
{{#code-block language="handlebars"}}
\{{paper-input label="Name" value=name}}
\{{paper-input label="E-mail" type="email" value=email}}
\{{paper-input label="Password" type="password"}}
\{{paper-input label="Submission date" type="date" value=date}}
\{{paper-input textarea=true label="Biography" value=biography}}

\{{paper-input label="Address" value=address required=true required-errortext="Address is required."}}
\{{paper-input label="Maximum Value" value=maxNumber max="5" max-errortext="Enter 5 or less."}}
\{{paper-input label="Minimum Value" value=minNumber min="1" min-errortext="Enter at least 1."}}
\{{paper-input label="Maximum Character Length" value=maxLength required=true maxlength="10" maxlength-errortext="Maximum length exceeded."}}
\{{paper-input label="All Constraints" value=allConstraints
   required=true
   min="2"
   max="10"
   maxlength="2"
   maxlength-errortext="Max length exceeded."
}}

&lt;h3&gt;Icons&lt;/h3&gt;
&lt;p&gt;
  \{{paper-input label="Name" value=name icon="person" icon-class="name"}}
  \{{paper-input placeholder="Phone Number" type="text" value=user.phone icon="phone" md-no-float=''}}
  \{{paper-input label="Email (required)" type="email" value=user.email icon="email" icon-class="email" required=true hideAllMessages=true}}
  \{{paper-input placeholder="Address" type="text" value=user.address icon="place"}}
&lt;/p&gt;{{/code-block}}

    <h3>Input Attributes</h3>
<p>
    These additional attributes will be passed through to the input helper inside of paper-input.
    See the Ember <a href="http://guides.emberjs.com/v2.0.0/templates/input-helpers/">Input Helpers</a> for more information.
    This is an example of using one of the attributes.
</p>
<p>
{{#code-block language="handlebars"}}
    \{{paper-input attr-tabindex="2"}}{{/code-block}}
</p>
    <h4>Text Fields</h4>
    <p>
    <table>
        <thead>
        <tr>
            <th>Ember Paper</th>
            <th>Matching Ember Input Helper Attribute</th>
        </tr>
        </thead>
        <tbody>
        <tr><td>attr-accept</td><td>accept</td></tr>
        <tr><td>attr-autocomplete</td><td>autocomplete</td></tr>
        <tr><td>attr-autosave</td><td>autosave</td></tr>
        <tr><td>attr-form</td><td>form</td></tr>
        <tr><td>attr-formaction</td><td>formaction</td></tr>
        <tr><td>attr-formenctype</td><td>formenctype</td></tr>
        <tr><td>attr-formmethod</td><td>formmethod</td></tr>
        <tr><td>attr-formnovalidate</td><td>formnovalidate</td></tr>
        <tr><td>attr-formtarget</td><td>formtarget</td></tr>
        <tr><td>attr-height</td><td>height</td></tr>
        <tr><td>attr-inputmode</td><td>inputmode</td></tr>
        <tr><td>attr-min</td><td>min</td></tr>
        <tr><td>attr-maxlength</td><td>maxlength</td></tr>
        <tr><td>attr-max</td><td>max</td></tr>
        <tr><td>attr-multiple</td><td>multiple</td></tr>
        <tr><td>attr-name</td><td>name</td></tr>
        <tr><td>attr-pattern</td><td>pattern</td></tr>
        <tr><td>attr-readonly</td><td>readonly</td></tr>
        <tr><td>attr-selectionDirection</td><td>selectionDirection</td></tr>
        <tr><td>attr-size</td><td>size</td></tr>
        <tr><td>attr-spellcheck</td><td>spellcheck</td></tr>
        <tr><td>attr-step</td><td>step</td></tr>
        <tr><td>attr-tabindex</td><td>tabindex</td></tr>
        <tr><td>attr-width</td><td>width</td></tr>
        </tbody>
    </table>
    </p>
    <h4>Text Areas</h4>
    <p>
    <table>
        <thead>
        <tr>
            <th>Ember Paper</th>
            <th>Matching Ember Input Helper Attribute</th>
        </tr>
        </thead>
        <tbody>
            <tr><td>attr-cols</td><td>cols</td></tr>
            <tr><td>attr-form</td><td>form</td></tr>
            <tr><td>attr-maxlength</td><td>maxlength</td></tr>
            <tr><td>attr-name</td><td>name</td></tr>
            <tr><td>attr-readonly</td><td>readonly</td></tr>
            <tr><td>attr-rows</td><td>rows</td></tr>
            <tr><td>attr-selectionDirection</td><td>selectionDirection</td></tr>
            <tr><td>attr-selectionEnd</td><td>selectionEnd</td></tr>
            <tr><td>attr-selectionStart</td><td>selectionStart</td></tr>
            <tr><td>attr-spellcheck</td><td>spellcheck</td></tr>
            <tr><td>attr-tabindex</td><td>tabindex</td></tr>
            <tr><td>attr-wrap</td><td>wrap</td></tr>
        </tbody>
    </table>
    </p>
    <h3>Events</h3>
    <p>
        You may also pass through an action when the user presses the enter key while on the input field or textarea.
    </p>
    <p>
        {{#code-block language="handlebars"}}
\{{paper-input event-enter="myEnterActionFunctionName"}}{{/code-block}}
    </p>

    <h3>Custom Validations</h3>
    <p>
        In addition to {{#code-inline}}required{{/code-inline}}, {{#code-inline}}min{{/code-inline}}, {{#code-inline}}max{{/code-inline}}, and {{#code-inline}}maxlength{{/code-inline}}, you may define your own custom validations.
        What you need to do is to define an object with two attributes, {{#code-inline}}errorMessage{{/code-inline}} and {{#code-inline}}isError{{/code-inline}}.

    <ul>
        <li><strong>errorMessage</strong> This is the text you want to display to the user when there is an error.</li>
        <li><strong>isError</strong> This is a function that takes one parameter, which is the input's value, and returns true when the value is invalid or false when the value is valid.</li>
    </ul>
    </p>
    <p>
        Here is an example of validating the input value matches typical email formats.
    </p>
    <h3>Template</h3>
  {{#code-block language="handlebars"}}
\{{paper-input label="E-mail" type="email" value=email customValidation=emailValidation}}{{/code-block}}
    <p>
        Define your {{#code-inline}}emailValidation{{/code-inline}} object in your controller.
      {{#code-block language="handlebars"}}
emailValidation: {
  'errorMessage': 'Please provide email in a valid format',
  'isError': (inputValue) => {
    var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
    return !emailPattern.test(inputValue);
  }
}{{/code-block}}
      {{paper-input label="E-mail" type="email" value=customemail customValidation=emailValidation}}
    </p>
    <p>
        You may also define multiple custom constraints by using an array of validation objects.
    </p>
  {{#code-block language="handlebars"}}
\{{paper-input label="E-mail" type="email" value=email customValidation=multipleConstraints}}{{/code-block}}
  {{#code-block language="handlebars"}}
multipleConstraints: [
  {
    'errorMessage': 'Value is not even',
    'isError': (inputValue) => {
      return (+inputValue % 2) === 1;
    }
  },
  {
    'errorMessage': 'Value does not equal 4',
    'isError': (inputValue) => {
      return +inputValue !== 4;
    }
  }
];{{/code-block}}
  {{paper-input label="Value should be even and equal 4." type="email" value=customMultiple customValidation=multipleConstraints}}

</div>
{{/paper-content}}
